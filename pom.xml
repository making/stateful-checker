<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>stateful-checker</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>Stateful Checker</name>
	<description>A Java CLI tool for checking stateful code in EJB 3 and Spring Beans</description>

	<properties>
		<java.version>17</java.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<openrewrite.version>8.21.0</openrewrite.version>
		<picocli.version>4.7.5</picocli.version>
		<junit.version>5.10.1</junit.version>
		<assertj.version>3.24.2</assertj.version>
		<jimfs.version>1.3.1</jimfs.version>
		<spring-javaformat.version>0.0.47</spring-javaformat.version>
	</properties>

	<dependencies>
		<!-- OpenRewrite -->
		<dependency>
			<groupId>org.openrewrite</groupId>
			<artifactId>rewrite-java</artifactId>
			<version>${openrewrite.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openrewrite</groupId>
			<artifactId>rewrite-java-17</artifactId>
			<version>${openrewrite.version}</version>
		</dependency>

		<!-- Picocli for CLI -->
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>

		<!-- SLF4J for logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>2.0.9</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.jimfs</groupId>
			<artifactId>jimfs</artifactId>
			<version>${jimfs.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.openrewrite</groupId>
			<artifactId>rewrite-test</artifactId>
			<version>${openrewrite.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Spring Java Format -->
			<plugin>
				<groupId>io.spring.javaformat</groupId>
				<artifactId>spring-javaformat-maven-plugin</artifactId>
				<version>${spring-javaformat.version}</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<inherited>true</inherited>
						<goals>
							<goal>validate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>17</source>
					<target>17</target>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!-- Surefire Plugin for tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.2</version>
			</plugin>

			<!-- Shade Plugin for executable JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.5.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.example.statefulchecker.cli.StatefulCheckerCli</mainClass>
								</transformer>
							</transformers>
							<finalName>stateful-checker</finalName>
							<createDependencyReducedPom>false</createDependencyReducedPom>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>